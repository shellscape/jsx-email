---
// Define types for our data structures
interface Author {
  img: string;
  name: string;
  url: string;
}

interface PullRequest {
  number: number;
  title: string;
  url: string;
}

interface PREntry {
  author: Author;
  pr: PullRequest;
}

interface ProcessedData {
  [date: string]: PREntry[];
}

interface GitHubPR {
  number: number;
  title: string;
  html_url: string;
  merged_at: string | null;
  user: {
    login: string;
    avatar_url: string;
    html_url: string;
  };
}

type TimelineEntry = [string, PREntry[]];

// Fetch PR data from GitHub API
let sortedData: TimelineEntry[] = [];

try {
  // Use native fetch instead of Octokit
  const response = await fetch(
    'https://api.github.com/repos/shellscape/jsx-email/pulls?state=closed&per_page=20',
    {
      headers: {
        Accept: 'application/vnd.github.v3+json'
      }
    }
  );

  if (!response.ok) {
    throw new Error(`GitHub API responded with ${response.status}: ${response.statusText}`);
  }

  const releases = (await response.json()) as GitHubPR[];

  // Process the data similar to the Vue implementation
  const processedData: ProcessedData = {};

  releases.forEach((pr) => {
    if (!pr.merged_at) return;

    const day = new Date(pr.merged_at).toISOString().split('T')[0];

    if (!processedData[day]) {
      processedData[day] = [];
    }

    processedData[day].push({
      author: {
        img: pr.user.avatar_url,
        name: pr.user.login,
        url: pr.user.html_url
      },
      pr: {
        number: pr.number,
        title: pr.title,
        url: pr.html_url
      }
    });
  });

  // Sort by date (newest first)
  const sortedDates = Object.keys(processedData).sort(
    (a, b) => new Date(b).getTime() - new Date(a).getTime()
  );
  sortedData = sortedDates.map((date) => [date, processedData[date]]);
} catch (error) {
  console.error('Error fetching GitHub data:', error);
  // Provide fallback data if API fails
  sortedData = [];
}
---

<section class="border-t border-gray-200 dark:border-gray-800">
  <div class="container-custom mx-auto px-4 md:px-6 relative">
    <!-- Timeline center line that runs through the entire component -->
    <div class="absolute sm:left-1/2 sm:-translate-x-1/2 top-0 bottom-0 w-[1px] bg-gray-200"></div>

    <!-- Header Card -->
    <div
      class="relative mt-16 mb-16 bg-white dark:bg-black rounded-3xl border border-gray-200 dark:border-gray-800 p-6 md:p-8 text-center max-w-2xl mx-auto z-10"
    >
      <h2 class="text-3xl md:text-4xl font-bold mb-3">Changelog</h2>
      <p class="text-gray-600 dark:text-gray-400 mb-8">
        Explore the latest contributions to jsx-email
      </p>

      <a
        href="https://github.com/shellscape/jsx-email/pulls?q=is%3Apr+is%3Aclosed+is%3Amerged"
        target="_blank"
        class="inline-block px-8 py-3 rounded-full bg-black text-white dark:bg-white dark:text-black text-base font-medium"
      >
        View on Github
      </a>
    </div>

    <!-- Timeline entries -->
    <div class="mb-10">
      {
        sortedData.length > 0 ? (
          sortedData.map(([day, events], index) => (
            <div
              class={`relative mb-10 ${index % 2 === 0 ? 'ml-auto mr-0 pl-8' : 'mr-auto ml-0 pr-8'}`}
              style={`width: 50%; transform: translateX(${index % 2 === 0 ? '-8px' : '8px'});`}
            >
              {/* <!-- Timeline point --> */}
              <div
                class={`timeline-point absolute w-3 h-3 bg-gray-200 dark:bg-gray-600 border-2 border-white dark:border-gray-900 rounded-full z-10 top-2 ${index % 2 === 0 ? 'sm:left-[2px]' : 'sm:right-[2px]'}`}
                style={` box-shadow: 0 0 0 2px rgba(229, 231, 235, 0.5);`}
              />

              {/* <!-- Content wrapper --> */}
              <div
                class={`flex flex-col ${index % 2 === 0 ? 'sm:items-start sm:text-left' : 'sm:items-end sm:text-right'}`}
              >
                {/* <!-- Date --> */}
                <p class="text-sm font-semibold text-gray-500 dark:text-gray-400 mb-2">
                  {new Date(day).toLocaleString('en-us', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </p>

                {/* <!-- Events for this day --> */}
                {events.map((entry: PREntry) => (
                  <div class="mb-4">
                    <a
                      href={entry.author.url}
                      target="_blank"
                      class={`inline-flex items-center gap-2 px-3 py-1.5 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-xs hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors mb-2 ${index % 2 === 0 ? 'sm:self-start' : 'sm:self-end'}`}
                    >
                      <img
                        src={entry.author.img}
                        alt={entry.author.name}
                        class="w-5 h-5 rounded-full"
                      />
                      {entry.author.name}
                    </a>
                    <div class="text-sm text-gray-700 dark:text-gray-400">
                      #{entry.pr.number}:{' '}
                      <a
                        href={entry.pr.url}
                        target="_blank"
                        class="text-black dark:text-white hover:text-gray-600 dark:hover:text-gray-300 transition-colors font-medium"
                      >
                        {entry.pr.title}
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))
        ) : (
          <div class="text-center py-12 text-gray-500">
            <p>
              Couldn't load recent contributions. Please visit our GitHub repository to see the
              latest updates.
            </p>
          </div>
        )
      }
    </div>

    <!-- Bottom link -->
    <div class="text-center z-10 relative">
      <a
        href="https://github.com/shellscape/jsx-email/pulls?q=is%3Apr+is%3Aclosed+is%3Amerged"
        target="_blank"
        class="inline-flex items-center justify-center py-2 px-6 text-sm font-medium rounded-full bg-black text-white dark:bg-white dark:text-black transition-all hover:bg-gray-800 dark:hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 mb-16"
      >
        <span>View all on Github</span>
      </a>
    </div>
  </div>
</section>

<style>
  /* Custom styles for timeline display - adapted from the Vue CSS module */
  @media (max-width: 640px) {
    [style*='width: 50%'] {
      width: 100% !important;
      transform: translateX(0) !important;
      padding-left: 24px !important;
      padding-right: 0 !important;
      margin-left: 0 !important;
      margin-right: 0 !important;
      text-align: left !important;
    }

    /* Reposition timeline bar for mobile */
    .absolute.w-0\\.5 {
      left: 12px !important;
      transform: none !important;
    }

    /* Fix point alignment on mobile */
    .timeline-point {
      left: -4px !important;
      right: auto !important;
    }
  }
</style>
